@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;700&display=swap");

:root {
  --Main: #ff00dd; /* Bright Pink/Magenta */
  --Background: #f0f0f0; /* Off-white/Very Light Grey */
  --Accent: #ffb347; /* Yellow-Orange - Secondary Accent */
  --Highlight: #90ee90; /* Light Green */
  --Alt1: #4682b4; /* Steel Blue - Potentially for stronger call to actions or specific states */
  --Alt2: #dc143c; /* Crimson - Good for active/warning states */
  --TextOnMain: #ffffff; /* White text for contrast on Main/Alt1 colors */
  --TextPrimary: #333333; /* Dark Grey for primary text */
  --TextSecondary: #555555; /* Medium Grey for secondary text */
  --SubdivisionBeatColor: #ffa07a; /* Light Salmon - for subdivision beats */
  --ActiveBarBackground: var(--Alt1); /* Deep Blue for active bar background */
  --BorderColor: #dddddd; /* Light grey for borders */
}


body {
  background-color: var(--Background);
  font-family: "Inter", sans-serif; /* Changed font */
  font-size: 1.4em; /* Adjusted base font size for 'Inter' on mobile */
  display: flex;
  justify-content: center;
  align-items: flex-start; /* Align to start to respect padding-top */
  min-height: 100vh; /* Ensure body takes at least full viewport height */
  width: 90%;
  margin: auto;
  padding: 70px 0 20px 0; /* Added 70px top padding, 20px bottom */
  user-select: none;
  color: var(--TextPrimary);
}

body *:focus {
  outline: var(--Accent) 4px solid;
}

.main-container {
  height: auto;
  margin: auto;
}

.metronome-container {
  background-color: #ffffff; /* Changed to white to stand out from var(--Background) */
  width: auto;
  height: auto;
  display: flex;
  justify-content: center;
  align-content: space-evenly;
  flex-wrap: wrap;
  flex-direction: row;
  /* Corrected and softened shadow */
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
  border-radius: 12px;

}

.tempo-container,
.measures-container,
.bar-settings-container {
  /* Slightly different background for containers if needed, or keep as body background */
  background: #ffffff; /* White card background */
  text-align: center;
  
}

.tempo-container {
  font-size: 1.5em; /* Relative to body font size */
  width: 100%;
}

.tempo,
.beats-per-current-measure,
.bars-length {
  font-weight: bold;
  color: var(--TextPrimary); /* Changed for better readability on Accent background */
  font-size: larger;
}

.tempo-text {
  font-weight: lighter;
  color: var(--TextSecondary);
  font-size: smaller;
}

.tempo-text-box.updating .tempo-text {
  animation: fadeOutIn 0.5s ease-in-out;
}

@keyframes fadeOutIn {
  0% { opacity: 1; transform: translateY(0); }
  49% { opacity: 0; transform: translateY(-5px); }
  50% { opacity: 0; transform: translateY(5px); } /* New text starts from slightly below */
  51% { opacity: 0; transform: translateY(5px); } /* Hold invisible briefly */
  100% { opacity: 1; transform: translateY(0); }
}

.tempo-settings {
  margin: 10px;
}

.tempo-slider {
  width: auto;
  padding: 0 15px; /* Reduced padding for mobile */
}

.slider {
  width: 100%;
}

input[type="range"] {
  -webkit-appearance: none;
  background: transparent;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
}

input[type="range"]:focus {
  outline: none;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background: var(--Main);
  margin-top: -12px;
}

input[type="range"]::-webkit-slider-container {
  background: var(--Background);
}

input[type="range"]::-webkit-slider-runnable-track {
  background: var(--Alt1); /* Was black, now purple for consolidation */
  width: 100%;
  height: 2px;
}

.tempo-settings,
.beat-settings,
.bar-settings {
  display: flex;
  justify-content: space-evenly;
}

.beat-settings,
.bar-settings {
  outline: 1px solid var(--BorderColor);
  background: var(--Accent); /* Was white, now yellow-green for contrast with blue outline */
  width: 100%;
}

span {
  text-transform: uppercase;
}

.start-stop-btn {
  height: 160px; /* Adjusted for mobile */
  width: 160px;  /* Adjusted for mobile */
  padding: 5px;
  margin: 5px;
  display: flex; /* Added for consistent centering with other buttons */
  align-items: center; /* Added for consistent centering */
  justify-content: center; /* Added for consistent centering */
  text-align: center;
  line-height: 5;
}
.start-stop-btn.active {
  background-color: var(--Alt2); /* A more active/warning color */
  color: var(--TextOnMain);
  box-shadow: var(--Main) 0px 0px 15px, inset var(--Alt1) 0px 0px 10px;
}



.measures-container,
.bar-settings-container {
  width: 100%; /* Full width on mobile when stacked */
}

.measure-settings-container,
.bar-settings-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.adjust-tempo,
.adjust-bar-length,
.adjust-measure-length,
.start-stop-btn {
  outline: 1px solid var(--Background);
  border-radius: 12px; /* Slightly less round for a more modern feel, or keep 50% for circles */
  background: var(--Highlight);
  margin: auto;
  display: flex; /* For centering content */
  align-items: center; /* For centering content */
  justify-content: center; /* For centering content */
  cursor: pointer;
  transition: all 0.2s ease-out; /* Quicker, smoother, and includes border-radius */
}

.adjust-tempo:hover,
.adjust-bar-length:hover,
.adjust-measure-length:hover,
.start-stop-btn:hover {
  outline: 2px solid var(--Main); /* Make hover outline more prominent with Main color */
  border-radius: 50%;
  background: var(--Alt1); /* Was dodgerblue, now purple */
  color: var(--TextOnMain); 
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(0,0,0,0.2);
}

.adjust-tempo:active,
.adjust-bar-length:active,
.adjust-measure-length:active,
.start-stop-btn:active {
  transform: translateY(1px);
  box-shadow: 0 2px 5px rgba(0,0,0,0.15);
  background-color: var(--Main); /* Slightly different active color */
  color: var(--TextOnMain);
}
.tap-tempo-btn.tapped {
  background-color: var(--Accent); /* Feedback color */
  /* Use a transform that doesn't conflict too much with :active */
  transform: scale(0.96) translateY(0px); 
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.adjust-tempo {
  height: 90px; /* Adjusted for mobile */
  width: 90px;  /* Adjusted for mobile */
  margin: auto;
}

.adjust-measure-length,
.adjust-bar-length {
  height: 60px; /* Adjusted for mobile */
  width: 60px;  /* Adjusted for mobile */
  margin: auto;
  padding: 0px;
}

.bar-display {
    width: 100%;
    display: flex;
    align-items: center;
}
select {
    height: 50px;
    width: 50px;
    outline-color: var(--Accent);
    border: 1px solid var(--Main);
    background-color: var(--Highlight);
    color: var(--TextPrimary);
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease;
}
select:hover {
    background-color: var(--Accent);
    border-color: var(--Alt1);
}

/* Note: Styling option elements is very limited and browser-dependent */
option {
   background-color: var(--Highlight); /* May not apply in all browsers */
    border-color: transparent;
}

.bar-display-container {
  background: var(--Background);
  outline: var(--BorderColor) 1px solid;
  border-radius: 5px;
  width: 100%;
  height: auto; 
  padding: 5px; /* Reduced padding for mobile */
  align-items: center;
  justify-content: center;
    display: flex; /* Allows bars to sit side-by-side */
    flex-wrap: wrap; /* Allows bars to wrap to next line if not enough space */
    overflow-x: auto; /* Enable horizontal scrolling if content overflows */
  margin: 5px 0; /* Reduced margin for mobile, 0 for left/right as width is 100% */
  min-height: 0; /* If needed, ensure it has a purpose */
}

.bar-visual {
    padding: 8px; /* Adjusted padding */
    margin: 5px;
    border: 1px solid var(--BorderColor); /* Was #ccc */
    background-color: var(--Highlight); /* Was #f9f9f9 */
    cursor: pointer;
    /* text-align: center; Flex properties will handle alignment */
    transition: background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
    min-width: 40px; /* Ensure clickable area */
    min-height: 30px; /* Give some base height */
    display: flex; /* Arrange beat squares horizontally */
    flex-wrap: wrap; /* Allow squares to wrap if too many */
    gap: 4px; /* Spacing between beat squares */
    align-items: center; /* Vertically align squares */
}
.bar-visual:hover {
  border-color: var(--Main);
  box-shadow: 0 0 8px var(--Accent);
}

.bar-visual.active-bar {
  background-color: var(--ActiveBarBackground);
  /* The existing transition on .bar-visual for background-color will apply */
}


.bar-visual.selected {
    border-color: var(--Alt1); /* Was dodgerblue */
    background-color: var(--Main); /* Was #e0efff */
    outline: 2px solid var(--Alt2); /* Was dodgerblue */
    box-shadow: 0 0 8px var(--Alt1); /* Was rgba(30, 144, 255, 0.5), alpha lost */
}
.beat-square {
    width: 12px;
    height: 12px;
    background-color: color-mix(in srgb, var(--Highlight) 60%, white); /* Lighter version of highlight */
    border: 1px solid var(--Highlight); /* Was #adadad */
    border-radius: 3px; /* Slightly more rounded */
    transition: all 0.2s ease-out; /* Smoother and slightly longer "pop" for liquid feel */
}

/* Style for beat squares that are subdivisions */
.beat-square.subdivision {
    background-color: var(--SubdivisionBeatColor);
}
/* Animation for newly removed beat squares */
.beat-square.removing-beat-animation {
  animation: beat-disappear-animation 0.3s ease-in forwards;
}

@keyframes beat-disappear-animation {
  from { opacity: 1; transform: scale(1); }
  to { opacity: 0; transform: scale(0); }
}
/* Animation for newly added beat squares */
.beat-square.newly-added-beat-animation {
  animation: beat-appear-animation 0.3s ease-out forwards;
}

@keyframes beat-appear-animation {
  from { opacity: 0; transform: scale(0.5); }
  to { opacity: 1; transform: scale(1); }
}


/* .highlighted class (already existing) will be used for beat squares */

.total-beats-display, select {
  outline: 1px solid var(--Main);
  padding: 4px;
  background: var(--Highlight);
  border-radius: 8px;
  font-size: 0.6em; /* Relative to body, smaller for UI elements */
  width: auto;
  text-align: center; 
  height: auto; /* Let padding and content define height, or set explicitly if needed */
  margin-right: auto;
  
}
.measure-bar {
  background: var(--Highlight);
  display: flex;
  gap: 2px;
  width: 3em;
  align-items: center;
  padding: 3px; /* Kept from upstream */
  margin: 0px;
  border-radius: 8px; /* Kept from upstream */
  justify-content: center;
  /* flex-flow: row nowrap; from stashed changes is default for flex-direction: row */
}
.measure-bar-segment {
    height: 90%;
    width: 90%;
    margin: 1px 3px;
    border-radius: 8px;
    background: var(--Main); /* Was rgba(0,0,0,0.25), now solid purple */
}
.measure-bar:nth-of-type(odd) {
  filter: brightness(1.25);
  height: 0.5em;
}
.measure-bar:nth-of-type(even) {
  height: 0.25em;
  filter: brightness(1.7);
  border-radius: 0px;
}
.measure-bar:first-of-type {
  height: 1em;
  filter: brightness(1);
  border-radius: 8px; /* Kept from upstream */
  /* background: hotpink; from stashed changes - already on .measure-bar */
}
.measure-bar-segment:nth-of-type(odd){
    background: var(--Alt2); /* Was rgba(0,0,0,0.5), now solid red/pink for distinction */
}
.highlighted{ /* Kept from upstream */
  scale: 1.55;
  margin: 0 0.1em;
  border-radius: 50%; /* Keep highlighted as circle */
  background: var(--Accent);
}
/* Base styles (mobile-first approach) */
.metronome-container {
  flex-direction: column; /* Stack elements on small screens */
}


/* Tablet and larger */
@media (min-width: 768px) {
  body {
    font-size: 1.6em; /* Adjusted for 'Inter' */
  }
  .metronome-container {
    flex-direction: row; /* Side-by-side on larger screens */
  }
 
  .tempo-slider {
    padding: 0 30px; /* Restore padding for larger screens */
  }
  .bar-display-container {
    padding: 10px;
    margin: 10px 0;
  }
  .start-stop-btn {
    height: 200px;
    width: 200px;
  }
  .adjust-tempo {
    height: 110px;
    width: 110px;
  }
  .adjust-measure-length,
  .adjust-bar-length {
    height: 70px;
    width: 70px;
  }
}

/* Desktop and larger */
@media (min-width: 1024px) {
  body {
    font-size: 1.8em; /* Adjusted for 'Inter' */
  }
  .start-stop-btn {
    height: 250px;
    width: 250px;
  }
  .adjust-tempo {
    height: 130px;
    width: 130px;
  }
  .adjust-measure-length,
  .adjust-bar-length {
    height: 80px; /* Added for desktop consistency */
    width: 80px;  /* Added for desktop consistency */
  }
}

/* Theme Switcher Styles */
.theme-controls {
  position: fixed;
  top: 10px;
  right: 10px;
  display: flex;
  gap: 8px; /* Increased gap slightly */
  padding: 8px; /* Increased padding slightly */
  background-color: color-mix(in srgb, var(--Background) 80%, transparent); /* Use Background with transparency */
  border: 1px solid var(--BorderColor);
  border-radius: 8px; /* Rounded corners */
  z-index: 1000; /* Ensure it's on top of other elements */
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.theme-controls button {
  padding: 6px 10px; /* Adjusted padding */
  border: 1px solid var(--BorderColor);
  background-color: var(--Highlight);
  color: var(--TextPrimary);
  cursor: pointer;
  border-radius: 5px; /* Rounded corners for buttons */
  font-size: 0.45em; /* Smaller font size relative to body */
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.theme-controls button:hover {
  background-color: var(--Accent);
  border-color: var(--Main);
  color: var(--TextPrimary); /* Ensure good contrast on Accent */
}
/* Animation for text updates on tempo, beats per measure, and bar length displays */
.tempo-text-box.updating,
.beats-per-current-measure.updating,
.bars-length.updating {
  animation: control-value-fade-out-in 0.5s ease-in-out;
}

@keyframes control-value-fade-out-in {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  49% { /* Point just before text content changes */
    opacity: 0;
    transform: translateY(-3px); /* Slight upward movement */
  }
  50% { /* Text content changes here via JS */
    opacity: 0;
    transform: translateY(3px); /* Start from slightly below */
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Animation for newly added bars */
.bar-visual.newly-added-bar-animation {
  animation: bar-appear 0.4s ease-out forwards;
  transform-origin: left center; /* Makes scaling appear from the left */
}

@keyframes bar-appear {
  from {
    opacity: 0;
    transform: scaleX(0.5) translateX(-15px);
  }
  to {
    opacity: 1;
    transform: scaleX(1) translateX(0);
  }
}

/* Animation for newly removed bars */
.bar-visual.removing-bar-animation {
  animation: bar-disappear-animation 0.4s ease-in forwards;
  transform-origin: left center; /* Consistent with adding animation */
}

@keyframes bar-disappear-animation {
  from {
    opacity: 1;
    transform: scaleX(1) translateX(0);
  }
  to {
    opacity: 0;
    transform: scaleX(0.5) translateX(-15px); /* Mirrors the 'from' state of bar-appear */
  }
}

/* Volume Controls Styling */
.volume-controls-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin: 15px auto; 
    padding: 5px 15px; 
    width: 90%; 
    max-width: 350px; 
}
.volume-controls-container label {
    font-size: 0.7em; /* Smaller label */
    color: var(--TextSecondary);
    white-space: nowrap; 
}

.volume-slider { /* This class is on the input[type="range"] */
    flex-grow: 1;
    min-width: 100px; 
    /* General input[type="range"] styles will apply for thumb and track */
}

.volume-value {
    font-size: 0.7em; /* Smaller value display */
    color: var(--TextPrimary);
    min-width: 40px; 
    text-align: right;
    background-color: var(--Highlight); /* Consistent with other displays */
    padding: 3px 6px;
    border-radius: 4px;
    border: 1px solid var(--BorderColor);
}

/* Preset Controls Styling */
.preset-controls {
    width: 100%;
    padding: 15px;
    margin-top: 20px;
    border-top: 1px solid var(--BorderColor); 
    text-align: center;
}
.preset-controls h3 {
    font-size: 0.9em; /* Adjusted size */
    font-weight: 500; 
    color: var(--TextPrimary);
    margin-bottom: 15px; 
    text-transform: uppercase;
    letter-spacing: 0.05em; 
}
.preset-slot-selection, .preset-actions {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin-bottom: 10px;
}
.preset-slot-selection label {
    font-size: 0.7em;
    color: var(--TextSecondary);
}
/* #preset-slot-select inherits from general 'select' but we can refine */
#preset-slot-select {
    font-size: 0.65em; /* Slightly smaller than buttons */
    padding: 6px 10px; /* Adjust padding */
    /* width: auto; height: auto; already in general select via .total-beats-display, select */
    min-width: 50px; 
}

.preset-btn {
    padding: 7px 14px; /* Slightly adjusted padding */
    border-radius: 5px;
    border: 1px solid var(--Main);
    background-color: var(--Highlight);
    color: var(--TextPrimary);
    cursor: pointer;
    font-size: 0.65em; /* Consistent small button size */
    transition: background-color 0.2s ease, border-color 0.2s ease, transform 0.1s ease;
}
.preset-btn:hover {
    background-color: var(--Accent);
    border-color: var(--Alt1);
}
.preset-btn:active {
    background-color: color-mix(in srgb, var(--Accent) 80%, black);
    transform: translateY(1px);
}

/* Suggestion for your CSS file */
.top-controls-area {
    position: absolute; /* Or use flex/grid within its parent */
    top: 15px;          /* Adjust as needed */
    left: 15px;         /* Adjust as needed */
    display: flex;
    gap: 10px;          /* Space between buttons */
    z-index: 1000;      /* Ensure it's on top if other elements overlap */
}

.top-controls-area button {
    /* Basic styling, adjust to match your theme */
    padding: 8px 12px;
    font-size: 0.9em;
    cursor: pointer;
    border: 1px solid var(--BorderColor, #ccc);
    background-color: var(--Accent, #f0f0f0);
    color: var(--TextPrimary, #333);
    border-radius: 4px;
}

.top-controls-area button:hover {
    background-color: var(--Highlight, #e0e0e0);
}

/* Adjust top controls for mobile */
@media (max-width: 767px) {
    .top-controls-area {
        position: fixed;
        top: 0;
        left: 0;
        width: 50%; /* Take up left half of the screen */
        display: flex;
        justify-content: center; /* Center buttons horizontally */
        align-items: center;
        padding: 8px; /* Consistent padding, similar to theme-controls */
        box-sizing: border-box;
        background-color: color-mix(in srgb, var(--Background) 80%, transparent);
        border: 1px solid var(--BorderColor); /* Full border for consistency */
        border-radius: 8px; /* Consistent radius */
        box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Consistent shadow */
        z-index: 999; /* Position it just below theme-controls (which are z-index: 1000) */
    }

    .theme-controls {
        top: 0; /* Align with top-controls-area */
        flex-wrap: wrap;
        right: 0; /* Align to the far right */
        left: auto; /* Override any inherited left positioning */
        width: 50%; /* Take up right half of the screen */
        box-sizing: border-box; /* Ensure padding/border are within the 50% width */
        justify-content: flex-end; /* Push theme buttons to the right of their container */
        align-items: center; /* Vertically center content */
    }

    /* Make the button inside .top-controls-area smaller on mobile to fit */
    .top-controls-area button {
        /* Original font-size: 0.9em (relative to parent 1.4em body font) */
        /* Original padding: 8px 12px */
        font-size: 0.6em; /* Significantly reduce font size for mobile */
                          /* (0.6em * 1.4em body font = ~0.84em root font size) */
        padding: 4px 6px;   /* Reduce padding */
        white-space: nowrap; /* Prevent text from wrapping, ensuring it stays one line */
    }

    /* Adjust theme controls for mobile */
    .theme-controls {
        justify-content: flex-end; /* Align theme buttons to the right */
        align-items: center; /* Vertically center content */
    }

    /* Make theme buttons fill their container equally on mobile */
    .theme-controls button {
        flex-grow: 1; /* Allow buttons to grow and take up equal space */
        text-align: center; /* Ensure text remains centered within the grown button */
        /* Existing padding, font-size, etc. from the general rule will still apply */
    }
}
